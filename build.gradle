// Tested with gradle 7.3.3
//
// GRADLE tutorial:
//
// Getting Started With Gradle: Creating a Multi-Project Build
// https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-creating-a-multi-project-build/
//
// Getting Started With Gradle 
// https://github.com/pkainulainen/gradle-examples
subprojects {
    apply plugin: 'java'

	version = '23.02.28' 

	java {
	    sourceCompatibility = JavaVersion.VERSION_11
	    targetCompatibility = JavaVersion.VERSION_11
	}
	
    repositories {
        mavenCentral()
    }
    
	dependencies {	
		// Reflections » 0.10.2
		// Reflections - Java runtime metadata analysis
		// https://mvnrepository.com/artifact/org.reflections/reflections
		implementation 'org.reflections:reflections:0.10.2'			
	
		// ==================================================================
		// LIBRARIES USED IN OTMM 22.4
		// Located at: /opt/otmm/jars
		// ==================================================================

		// Apache Commons IO » 2.8.0
		// The Apache Commons IO library contains utility classes, stream implementations, 
		// file filters, file comparators, endian transformation classes, and much more.
		// https://mvnrepository.com/artifact/commons-io/commons-io
		implementation 'commons-io:commons-io:2.8.0'		
		// Commons Lang » 2.6
		// Commons Lang, a package of Java utility classes for the classes that are in 
		// java.lang's hierarchy, or are considered to be so standard as to justify 
		// existence in java.lang.
		// https://mvnrepository.com/artifact/commons-lang/commons-lang
		implementation 'commons-lang:commons-lang:2.6'
		// Apache Commons Logging » 1.2
		// Apache Commons Logging is a thin adapter allowing configurable bridging to other, well known logging systems.
		// https://mvnrepository.com/artifact/commons-logging/commons-logging
		implementation 'commons-logging:commons-logging:1.2'		


		// ==================================================================
		// LIBRARIES USED IN OTMM 22.4
		// Located at: /opt/OTMM/deploy/common
		// ==================================================================
		
		// Apache Commons Collections » 4.4
		// The Apache Commons Collections package contains types that extend and augment the Java Collections Framework.		
		// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
		implementation 'org.apache.commons:commons-collections4:4.3'
		// Apache Commons FileUpload » 1.3.3
		// The Apache Commons FileUpload component provides a simple yet flexible means 
		// of adding support for multipart file upload functionality to servlets and web applications.
		// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
		implementation 'commons-fileupload:commons-fileupload:1.3.3'
		
		
		// ==================================================================
		//
		// Common libraries used for log/trace and testing
		//
		// ==================================================================	
	
		// API for Apache Log4J, a highly configurable logging tool that focuses on performance and low garbage generation. It has a plugin architecture that makes it extensible and supports asynchronous logging based on LMAX Disruptor.
		// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
		implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
		// Implementation for Apache Log4J, a highly configurable logging tool that focuses on performance and low garbage generation. It has a plugin architecture that makes it extensible and supports asynchronous logging based on LMAX Disruptor.	
		// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
		implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
		
		// JUnit Jupiter API » 5.9.2 
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
		// JUnit Platform Suite Engine » 1.9.2 - Module "junit-platform-suite-engine" of JUnit 5.	
		// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-suite-engine
		testImplementation 'org.junit.platform:junit-platform-suite-engine:1.9.2'		
				
	    // Mockito mock objects library core API and implementation	    
		// https://mvnrepository.com/artifact/org.mockito/mockito-core
		//testImplementation 'org.mockito:mockito-core:5.1.1'
		//Mockito Inline » 5.1.1
		//Mockito preconfigured inline mock maker (intermediate and to be superseeded by automatic usage in a future version)
		// https://mvnrepository.com/artifact/org.mockito/mockito-inline
		testImplementation 'org.mockito:mockito-inline:5.1.1'
		
		// PowerMock API for Mockito 2.+..
		// https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
		testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
		// PowerMock support module for JUnit 4.x rules with Java agent		
		// https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4-rule-agent
		testImplementation 'org.powermock:powermock-module-junit4-rule-agent:2.0.9'
		// PowerMock support module for JUnit 4.x rules.
		// https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4-rule
		testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.9'
		// PowerMock support module for JUnit 4.x.		
		// https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
		testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
		// PowerMock module for TestNG.		
		// https://mvnrepository.com/artifact/org.powermock/powermock-module-testng
		testImplementation 'org.powermock:powermock-module-testng:2.0.9'						
	}
	
	tasks.named('test') {
	    // Use JUnit Platform for unit tests.
	    useJUnitPlatform()
	}	    
}